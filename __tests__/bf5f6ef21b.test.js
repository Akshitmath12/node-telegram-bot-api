// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=fb92e481bd
ROOST_METHOD_SIG_HASH=bf5f6ef21b


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram Module', () => {
  let telegram;

  beforeAll(() => {
    telegram = new Telegram();
  });

  test('getMyName method should return correct data', async () => {
    const mockRequest = jest.fn().mockResolvedValue('John Doe');
    telegram._request = mockRequest;
    const form = { userId: 1 };
    const response = await telegram.getMyName(form);
    expect(response).toBe('John Doe');
    expect(mockRequest).toHaveBeenCalledWith('getMyName', { form });
  });

  test('getMyName method should handle error', async () => {
    const mockRequest = jest.fn().mockRejectedValue(new Error('Request failed'));
    telegram._request = mockRequest;
    const form = { userId: 1 };
    await expect(telegram.getMyName(form)).rejects.toThrow('Request failed');
    expect(mockRequest).toHaveBeenCalledWith('getMyName', { form });
  });
});
