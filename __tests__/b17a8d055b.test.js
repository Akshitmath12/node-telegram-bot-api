// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=f48b76eb8e
ROOST_METHOD_SIG_HASH=b17a8d055b


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram getFileLink method', () => {
  let telegram;
  const fileId = 'testFileId';
  const form = {};
  const token = 'testToken';
  const baseApiUrl = 'http://test.com';
  const filePath = 'test/file/path';
  const expectedUrl = `${baseApiUrl}/file/bot${token}/${filePath}`;

  beforeAll(() => {
    telegram = new Telegram();
    telegram.options = {
      baseApiUrl,
      token,
    };
    telegram.getFile = jest.fn().mockResolvedValue({ file_path: filePath });
  });

  test('should return correct file URL', async () => {
    const result = await telegram.getFileLink(fileId, form);
    expect(result).toBe(expectedUrl);
    expect(telegram.getFile).toHaveBeenCalledWith(fileId, form);
  });

  test('should throw error when getFile rejects', async () => {
    const error = new Error('getFile error');
    telegram.getFile.mockRejectedValueOnce(error);

    await expect(telegram.getFileLink(fileId, form)).rejects.toThrow(error);
  });
});
