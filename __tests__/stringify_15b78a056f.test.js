// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=stringify_d5fe20fec0
ROOST_METHOD_SIG_HASH=stringify_15b78a056f


*/

// ********RoostGPT********
const { stringify } = require("./telegram");

describe("stringify function", () => {

  beforeEach(() => {
    // Setup code if any.
  });

  afterEach(() => {
    // Cleanup code if any.
  });

  test("should return the same string if input is string", () => {
    const data = "Hello, world!";
    const result = stringify(data);
    expect(result).toBe(data);
  });

  test("should return JSON stringified object if input is object", () => {
    const data = { message: "Hello, world!" };
    const result = stringify(data);
    expect(result).toBe(JSON.stringify(data));
  });

  test("should return JSON stringified array if input is array", () => {
    const data = ["Hello", "world!"];
    const result = stringify(data);
    expect(result).toBe(JSON.stringify(data));
  });

  test("should throw error if stringify fails", () => {
    const circularReference = {};
    circularReference.myself = circularReference;
    expect(() => stringify(circularReference)).toThrow();
  });

});
