// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=6185f37d1d
ROOST_METHOD_SIG_HASH=685de16269


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('sendDice method', () => {
  let telegram;

  beforeEach(() => {
    telegram = new Telegram();
    telegram._formatSendData = jest.fn(() => [{}, '']);
    telegram._request = jest.fn(() => Promise.resolve('Success'));
  });

  test('should successfully send dice', async () => {
    const chatId = '123456';
    const options = {};
    await telegram.sendDice(chatId, options);

    expect(telegram._formatSendData).toHaveBeenCalledWith('dice');
    expect(telegram._request).toHaveBeenCalledWith('sendDice', {
      qs: {
        chat_id: chatId,
      },
      formData: {},
    });
  });

  test('should reject promise if _formatSendData throws an error', async () => {
    const error = new Error('Test error');
    telegram._formatSendData = jest.fn(() => { throw error; });

    await expect(telegram.sendDice('123456', {})).rejects.toEqual(error);
  });
});
