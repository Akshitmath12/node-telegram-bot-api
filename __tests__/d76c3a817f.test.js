// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=6d6e3f9ac1
ROOST_METHOD_SIG_HASH=d76c3a817f


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('removeTextListener', () => {
  let telegram;
  let dummyRegexp;

  beforeEach(() => {
    telegram = new Telegram();
    dummyRegexp = /dummy/;
  });

  test('should remove the text listener matching the provided regexp', () => {
    telegram._textRegexpCallbacks.push({ regexp: dummyRegexp });
    const removed = telegram.removeTextListener(dummyRegexp);
    expect(removed.regexp).toBe(dummyRegexp);
    expect(telegram._textRegexpCallbacks).not.toContain(removed);
  });

  test('should return null if no matching text listener is found', () => {
    const removed = telegram.removeTextListener(dummyRegexp);
    expect(removed).toBeNull();
  });

  test('should only remove the first matching text listener if there are multiple', () => {
    telegram._textRegexpCallbacks.push({ regexp: dummyRegexp }, { regexp: dummyRegexp });
    const removed = telegram.removeTextListener(dummyRegexp);
    expect(removed.regexp).toBe(dummyRegexp);
    expect(telegram._textRegexpCallbacks).toContainEqual({ regexp: dummyRegexp });
  });
});
