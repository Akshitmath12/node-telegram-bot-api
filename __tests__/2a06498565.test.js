// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=a688b0a9f9
ROOST_METHOD_SIG_HASH=2a06498565


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('unbanChatMember method', () => {
  let telegram;
  let chatId;
  let userId;
  let form;

  beforeEach(() => {
    telegram = new Telegram();
    chatId = '1234';
    userId = '5678';
    form = {};
  });

  test('should unban a chat member successfully', async () => {
    const response = await telegram.unbanChatMember(chatId, userId, form);

    expect(response).toBeDefined();
    expect(response.ok).toBe(true);
  });

  test('should throw an error if chatId is not provided', async () => {
    await expect(telegram.unbanChatMember(undefined, userId, form)).rejects.toThrow();
  });

  test('should throw an error if userId is not provided', async () => {
    await expect(telegram.unbanChatMember(chatId, undefined, form)).rejects.toThrow();
  });

  afterEach(() => {
    telegram = null;
    chatId = null;
    userId = null;
    form = null;
  });
});
