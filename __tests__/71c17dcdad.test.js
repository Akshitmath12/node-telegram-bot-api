// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=7e0dd7964c
ROOST_METHOD_SIG_HASH=71c17dcdad


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('editForumTopic method', () => {
  let telegram;
  let chatId;
  let messageThreadId;
  let form;

  beforeEach(() => {
    telegram = new Telegram();
    chatId = 12345;
    messageThreadId = 'msg123';
    form = { title: 'New Topic' };

    // Mock _request method
    telegram._request = jest.fn(() => Promise.resolve({ ok: true }));
  });

  test('should edit forum topic successfully', async () => {
    const response = await telegram.editForumTopic(chatId, messageThreadId, form);
    expect(telegram._request).toHaveBeenCalledWith('editForumTopic', { form: { chat_id: chatId, message_thread_id: messageThreadId, title: 'New Topic' } });
    expect(response).toEqual({ ok: true });
  });

  test('should throw error when _request fails', async () => {
    telegram._request.mockImplementationOnce(() => Promise.reject(new Error('Request failed')));
    await expect(telegram.editForumTopic(chatId, messageThreadId, form)).rejects.toThrow('Request failed');
  });
});
