// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=c48d1b5234
ROOST_METHOD_SIG_HASH=832d2a3389


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram', () => {
  let telegram;

  beforeEach(() => {
    telegram = new Telegram();
    telegram._request = jest.fn();
  });

  describe('editGeneralForumTopic', () => {
    it('should call _request with correct arguments', () => {
      const chatId = 123;
      const name = 'Test Topic';
      const form = { extra: 'data' };

      telegram.editGeneralForumTopic(chatId, name, form);

      expect(telegram._request).toHaveBeenCalledWith('editGeneralForumTopic', {
        form: {
          chat_id: chatId,
          name,
          extra: 'data',
        },
      });
    });

    it('should create an empty form if not provided', () => {
      const chatId = 123;
      const name = 'Test Topic';

      telegram.editGeneralForumTopic(chatId, name);

      expect(telegram._request).toHaveBeenCalledWith('editGeneralForumTopic', {
        form: {
          chat_id: chatId,
          name,
        },
      });
    });

    it('should handle error correctly', () => {
      const chatId = 123;
      const name = 'Test Topic';
      const error = new Error('Test error');

      telegram._request.mockImplementation(() => {
        throw error;
      });

      expect(() => telegram.editGeneralForumTopic(chatId, name)).toThrow(error);
    });
  });
});
