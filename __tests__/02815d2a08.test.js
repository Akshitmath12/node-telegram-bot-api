// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=408f5c10ca
ROOST_METHOD_SIG_HASH=02815d2a08


*/

// ********RoostGPT********
// Import the required modules
const Telegram = require('./telegram');

// Initialize the Telegram object
let telegram;

// Create a test suite for the stopMessageLiveLocation method
describe('stopMessageLiveLocation', () => {

  // Set up the necessary preconditions
  beforeEach(() => {
    telegram = new Telegram();
    telegram._request = jest.fn();
  });

  // Test case 1: Ensure the method works correctly
  test('Should call the _request method with correct arguments', () => {
    const form = { chat_id: 123, message_id: 456 };
    telegram.stopMessageLiveLocation(form);
    expect(telegram._request).toHaveBeenCalledWith('stopMessageLiveLocation', { form });
  });

  // Test case 2: Ensure the method handles empty form correctly
  test('Should call the _request method with empty form', () => {
    telegram.stopMessageLiveLocation();
    expect(telegram._request).toHaveBeenCalledWith('stopMessageLiveLocation', { form: {} });
  });

  // Clean up tasks
  afterEach(() => {
    telegram = null;
  });
});
