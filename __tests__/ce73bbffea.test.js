// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=3145b16390
ROOST_METHOD_SIG_HASH=ce73bbffea


*/

// ********RoostGPT********
// Import the module you are testing
const Telegram = require('../src/telegram');

// Create a new instance of the Telegram class
let telegram;

// Use the describe function to create a test suite
describe('Telegram', () => {

  // Run before each test
  beforeEach(() => {
    telegram = new Telegram();
  });

  // Test case for the onText method
  test('onText should add a new callback to the _textRegexpCallbacks array', () => {
    const regexp = /test/;
    const callback = () => {};

    // Call the method with the test parameters
    telegram.onText(regexp, callback);

    // Check the state of the _textRegexpCallbacks array
    const expected = { regexp, callback };
    expect(telegram._textRegexpCallbacks).toContainEqual(expected);
  });

  // Test case for the onText method with invalid parameters
  test('onText should throw an error if the parameters are not correct', () => {
    // Define invalid parameters
    const invalidRegexp = 'test';
    const invalidCallback = 'callback';

    // Expect an error to be thrown when the method is called with invalid parameters
    expect(() => telegram.onText(invalidRegexp, invalidCallback)).toThrow();
  });
});
