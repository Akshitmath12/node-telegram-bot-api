// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=0b5f7e6c92
ROOST_METHOD_SIG_HASH=474dfadb6c


*/

// ********RoostGPT********
// Importing required modules
const Telegram = require('./telegram');

// Creating instance of Telegram class
const telegram = new Telegram();

describe('Telegram', () => {
  // Test case for successful creation of forum topic
  test('should create a forum topic successfully', () => {
    // Mock _request method to simulate a successful forum topic creation
    telegram._request = jest.fn(() => Promise.resolve({ ok: true }));

    const chatId = '123456';
    const name = 'Test Topic';

    return telegram.createForumTopic(chatId, name).then(response => {
      expect(response).toEqual({ ok: true });
      expect(telegram._request).toHaveBeenCalledWith('createForumTopic', {
        form: {
          chat_id: chatId,
          name: name
        }
      });
    });
  });

  // Test case for unsuccessful creation of forum topic
  test('should fail to create a forum topic', () => {
    // Mock _request method to simulate a failed forum topic creation
    telegram._request = jest.fn(() => Promise.reject(new Error('Failed to create forum topic')));

    const chatId = '123456';
    const name = 'Test Topic';

    return telegram.createForumTopic(chatId, name).catch(error => {
      expect(error).toEqual(new Error('Failed to create forum topic'));
      expect(telegram._request).toHaveBeenCalledWith('createForumTopic', {
        form: {
          chat_id: chatId,
          name: name
        }
      });
    });
  });
});
