// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=6da13ca414
ROOST_METHOD_SIG_HASH=ec8d096935


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram', () => {
  let telegram;

  beforeAll(() => {
    telegram = new Telegram();
  });

  describe('reopenForumTopic', () => {
    test('should successfully reopen a forum topic', async () => {
      const chatId = '1234';
      const messageThreadId = '5678';
      const form = { title: 'Test Topic' };

      const response = await telegram.reopenForumTopic(chatId, messageThreadId, form);

      expect(response).toBeDefined();
      expect(response.form.chat_id).toEqual(chatId);
      expect(response.form.message_thread_id).toEqual(messageThreadId);
    });

    test('should throw an error if no chatId is provided', async () => {
      const messageThreadId = '5678';
      const form = { title: 'Test Topic' };

      await expect(telegram.reopenForumTopic(undefined, messageThreadId, form)).rejects.toThrow();
    });

    test('should throw an error if no messageThreadId is provided', async () => {
      const chatId = '1234';
      const form = { title: 'Test Topic' };

      await expect(telegram.reopenForumTopic(chatId, undefined, form)).rejects.toThrow();
    });
  });
});
