// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=08c3fc4fdc
ROOST_METHOD_SIG_HASH=7583139bad


*/

// ********RoostGPT********
// Import the necessary modules
const { getWebHookInfo } = require('../src/telegram');

// Define the test suite
describe('getWebHookInfo', () => {
  // Define any necessary preconditions
  let form;

  // Set up preconditions before each test
  beforeEach(() => {
    form = {};
  });

  // Test case 1: Verify that the method works with an empty form
  test('should work with an empty form', async () => {
    const result = await getWebHookInfo(form);
    expect(result).toBeDefined();
    expect(typeof result).toBe('object');
  });

  // Test case 2: Verify that the method works with a non-empty form
  test('should work with a non-empty form', async () => {
    form = { key: 'value' };
    const result = await getWebHookInfo(form);
    expect(result).toBeDefined();
    expect(typeof result).toBe('object');
  });

  // Test case 3: Verify that the method throws an error when called with a non-object argument
  test('should throw an error when called with a non-object argument', async () => {
    await expect(getWebHookInfo('not an object')).rejects.toThrow();
  });
});
