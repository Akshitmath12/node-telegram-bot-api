// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=d49bef9eff
ROOST_METHOD_SIG_HASH=7baf219c50


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram setMyName method', () => {
  let telegram;

  beforeEach(() => {
    telegram = new Telegram();
    telegram._request = jest.fn();
  });

  test('should call _request method with correct arguments', () => {
    const form = { name: 'John Doe' };
    telegram.setMyName(form);
    expect(telegram._request).toHaveBeenCalledWith('setMyName', { form });
  });

  test('should return the result of _request method call', () => {
    const form = { name: 'John Doe' };
    const response = { status: 'success' };
    telegram._request.mockReturnValue(response);
    const result = telegram.setMyName(form);
    expect(result).toBe(response);
  });

  test('should handle error from _request method call', () => {
    const form = { name: 'John Doe' };
    const error = new Error('Request failed');
    telegram._request.mockImplementation(() => {
      throw error;
    });
    expect(() => telegram.setMyName(form)).toThrow(error);
  });
});
