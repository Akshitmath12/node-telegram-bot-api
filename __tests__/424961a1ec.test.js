// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=c2d7ea15e9
ROOST_METHOD_SIG_HASH=424961a1ec


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram Module', () => {
  let telegram;

  beforeAll(() => {
    telegram = new Telegram();
  });

  test('getMyDescription method should return correct data', async () => {
    const mockRequest = jest.fn().mockResolvedValue('expected data');
    telegram._request = mockRequest;
    const form = { key: 'value' };

    const result = await telegram.getMyDescription(form);

    expect(mockRequest).toHaveBeenCalledWith('getMyDescription', { form });
    expect(result).toBe('expected data');
  });

  test('getMyDescription method should handle errors correctly', async () => {
    const mockRequest = jest.fn().mockRejectedValue(new Error('request error'));
    telegram._request = mockRequest;
    const form = { key: 'value' };

    try {
      await telegram.getMyDescription(form);
    } catch (error) {
      expect(mockRequest).toHaveBeenCalledWith('getMyDescription', { form });
      expect(error).toEqual(new Error('request error'));
    }
  });

  afterEach(() => {
    jest.resetAllMocks();
  });
});
