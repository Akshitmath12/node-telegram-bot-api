// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=82d30f64bc
ROOST_METHOD_SIG_HASH=3de940d7f1


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram deleteChatPhoto method', () => {
  let telegram;
  let mockRequest;

  beforeEach(() => {
    mockRequest = jest.fn();
    telegram = new Telegram();
    telegram._request = mockRequest;
  });

  test('Should call _request with correct parameters', () => {
    const chatId = 12345;
    const form = { someKey: 'someValue' };

    telegram.deleteChatPhoto(chatId, form);

    expect(mockRequest).toHaveBeenCalledWith('deleteChatPhoto', { form: { ...form, chat_id: chatId } });
  });

  test('Should add chat_id to form if not present', () => {
    const chatId = 12345;

    telegram.deleteChatPhoto(chatId);

    expect(mockRequest).toHaveBeenCalledWith('deleteChatPhoto', { form: { chat_id: chatId } });
  });

  test('Should throw error if chatId is not provided', () => {
    expect(() => {
      telegram.deleteChatPhoto();
    }).toThrow();
  });
});
