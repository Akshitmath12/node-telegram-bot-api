// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=cf1adfa22c
ROOST_METHOD_SIG_HASH=5e64f6d4d5


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram', () => {
  let telegram;

  beforeAll(() => {
    telegram = new Telegram();
  });

  describe('logOut', () => {
    test('should return a promise', () => {
      const result = telegram.logOut();
      expect(result).toBeInstanceOf(Promise);
    });

    test('should call _request with "logOut" and form', () => {
      const spy = jest.spyOn(telegram, '_request');
      const form = { key: 'value' };
      telegram.logOut(form);
      expect(spy).toHaveBeenCalledWith('logOut', { form });
    });

    test('should handle errors', async () => {
      const error = new Error('Request failed');
      jest.spyOn(telegram, '_request').mockRejectedValueOnce(error);
      await expect(telegram.logOut()).rejects.toThrow('Request failed');
    });
  });
});
