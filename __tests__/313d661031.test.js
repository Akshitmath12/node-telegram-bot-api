// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=d3ae88dbb6
ROOST_METHOD_SIG_HASH=313d661031


*/

// ********RoostGPT********
// Importing the required module
const telegram = require('../src/telegram');

describe('telegram.js Tests', () => {
  let chatId;
  let messageId;
  let callback;

  // Setup for all tests
  beforeEach(() => {
    chatId = 12345;
    messageId = 67890;
    callback = jest.fn();
  });

  // Test case 1: Check if onReplyToMessage correctly adds a reply listener
  test('onReplyToMessage should add a reply listener correctly', () => {
    const id = telegram.onReplyToMessage(chatId, messageId, callback);
    const replyListener = telegram._replyListeners.find(listener => listener.id === id);
    
    expect(replyListener).toBeDefined();
    expect(replyListener.chatId).toBe(chatId);
    expect(replyListener.messageId).toBe(messageId);
    expect(replyListener.callback).toBe(callback);
  });

  // Test case 2: Check if onReplyToMessage returns correct id
  test('onReplyToMessage should return correct id', () => {
    const id1 = telegram.onReplyToMessage(chatId, messageId, callback);
    const id2 = telegram.onReplyToMessage(chatId, messageId, callback);
    
    expect(id1).toBe(telegram._replyListenerId - 1);
    expect(id2).toBe(telegram._replyListenerId);
  });
});
