// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=f661d24ae2
ROOST_METHOD_SIG_HASH=27e5954317


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('promoteChatMember', () => {
  let telegram;
  let chatId;
  let userId;
  let form;

  beforeEach(() => {
    telegram = new Telegram();
    chatId = '12345';
    userId = '67890';
    form = {};
  });

  test('should promote chat member successfully', async () => {
    const response = await telegram.promoteChatMember(chatId, userId, form);
    expect(response).toBeDefined();
    expect(response).toHaveProperty('ok', true);
  });

  test('should throw an error if chatId is not provided', async () => {
    await expect(telegram.promoteChatMember(undefined, userId, form)).rejects.toThrow();
  });

  test('should throw an error if userId is not provided', async () => {
    await expect(telegram.promoteChatMember(chatId, undefined, form)).rejects.toThrow();
  });

  test('should throw an error if form is not an object', async () => {
    await expect(telegram.promoteChatMember(chatId, userId, 'notAnObject')).rejects.toThrow();
  });
});
