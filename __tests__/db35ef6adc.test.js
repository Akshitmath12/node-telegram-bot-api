// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=b1587cee87
ROOST_METHOD_SIG_HASH=db35ef6adc


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram', () => {
  let telegram;
  
  beforeEach(() => {
    telegram = new Telegram();
  });

  test('should successfully close with form data', async () => {
    const formData = { key: 'value' };
    telegram._request = jest.fn().mockResolvedValue('Success');
    
    const response = await telegram.close(formData);
    
    expect(telegram._request).toHaveBeenCalledWith('close', { form: formData });
    expect(response).toBe('Success');
  });

  test('should throw error when _request fails', async () => {
    const error = new Error('Request failed');
    telegram._request = jest.fn().mockRejectedValue(error);
    
    await expect(telegram.close()).rejects.toThrow('Request failed');
    expect(telegram._request).toHaveBeenCalledWith('close', { form: {} });
  });
});
