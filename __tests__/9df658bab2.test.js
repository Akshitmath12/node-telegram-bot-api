// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=d71f0b0080
ROOST_METHOD_SIG_HASH=9df658bab2


*/

// ********RoostGPT********
const { _fixReplyMarkup } = require('../src/telegram');

describe('_fixReplyMarkup method', () => {
    
    let obj;

    beforeEach(() => {
        obj = {
            reply_markup: { inline_keyboard: [[{ text: 'Test', callback_data: 'Test' }]] }
        };
    });

    test('Should stringify reply_markup if it is not a string', () => {
        _fixReplyMarkup(obj);
        expect(typeof obj.reply_markup).toBe('string');
    });

    test('Should not modify reply_markup if it is already a string', () => {
        const expectedReplyMarkup = JSON.stringify(obj.reply_markup);
        obj.reply_markup = expectedReplyMarkup;
        _fixReplyMarkup(obj);
        expect(obj.reply_markup).toBe(expectedReplyMarkup);
    });

    test('Should not modify reply_markup if it is not present', () => {
        delete obj.reply_markup;
        const expectedObj = { ...obj };
        _fixReplyMarkup(obj);
        expect(obj).toEqual(expectedObj);
    });

});
