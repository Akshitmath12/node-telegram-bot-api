// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=8ff16318d7
ROOST_METHOD_SIG_HASH=168b7b5ed7


*/

// ********RoostGPT********
// Import the necessary modules
const Telegram = require('./telegram');

// Instantiate the Telegram class
const telegram = new Telegram();

// Define the test suite
describe('Telegram setChatMenuButton method', () => {
  
  // Test case 1: Check if the method returns an object
  test('should return an object', async () => {
    const result = await telegram.setChatMenuButton({});
    expect(typeof result).toBe('object');
  });
  
  // Test case 2: Check if the method calls _request with correct parameters
  test('should call _request with correct parameters', async () => {
    const form = {button: 'test'};
    const spy = jest.spyOn(telegram, '_request');
    await telegram.setChatMenuButton(form);
    expect(spy).toHaveBeenCalledWith('setChatMenuButton', {form});
  });
  
  // Test case 3: Check if the method throws an error when called without parameters
  test('should throw an error when called without parameters', async () => {
    await expect(telegram.setChatMenuButton()).rejects.toThrow();
  });
  
  // Clean up
  afterEach(() => {
    jest.clearAllMocks();
  });
});
