// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=514288e8e0
ROOST_METHOD_SIG_HASH=79e1d5af2b


*/

// ********RoostGPT********
const Telegram = require('./telegram');

describe('Telegram', () => {
  let telegram;

  beforeAll(() => {
    telegram = new Telegram();
  });

  describe('closeForumTopic', () => {
    test('should successfully close forum topic', async () => {
      const chatId = '123';
      const messageThreadId = '456';
      const form = {};

      const response = await telegram.closeForumTopic(chatId, messageThreadId, form);

      expect(response).toBeDefined();
      expect(form.chat_id).toBe(chatId);
      expect(form.message_thread_id).toBe(messageThreadId);
    });

    test('should throw an error if chatId is not provided', async () => {
      const messageThreadId = '456';
      const form = {};

      await expect(telegram.closeForumTopic(null, messageThreadId, form)).rejects.toThrow('chatId is required');
    });

    test('should throw an error if messageThreadId is not provided', async () => {
      const chatId = '123';
      const form = {};

      await expect(telegram.closeForumTopic(chatId, null, form)).rejects.toThrow('messageThreadId is required');
    });
  });
});
