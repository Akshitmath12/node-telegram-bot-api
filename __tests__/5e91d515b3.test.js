// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTest using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=bd4e455ad3
ROOST_METHOD_SIG_HASH=5e91d515b3


*/

// ********RoostGPT********
const TelegramBot = require('../src/telegram');

describe('TelegramBot', () => {
  let bot;

  beforeAll(() => {
    bot = new TelegramBot();
  });

  describe('restrictChatMember', () => {
    test('should restrict a chat member with given chat id and user id', () => {
      const chatId = '1234';
      const userId = '5678';
      const form = {};

      const requestSpy = jest.spyOn(bot, '_request');

      bot.restrictChatMember(chatId, userId, form);

      expect(requestSpy).toHaveBeenCalledWith('restrictChatMember', {
        form: {
          chat_id: chatId,
          user_id: userId
        }
      });
    });

    test('should throw an error when no chat id is provided', () => {
      const chatId = null;
      const userId = '5678';
      const form = {};

      expect(() => bot.restrictChatMember(chatId, userId, form)).toThrow();
    });

    test('should throw an error when no user id is provided', () => {
      const chatId = '1234';
      const userId = null;
      const form = {};

      expect(() => bot.restrictChatMember(chatId, userId, form)).toThrow();
    });
  });
});

